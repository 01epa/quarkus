package org.hibernate.protean.impl.serviceregistry;

import java.util.LinkedHashSet;

import org.hibernate.integrator.spi.Integrator;
import org.hibernate.integrator.spi.IntegratorService;

/**
 * Mirror replay of the state generated by org.hibernate.integrator.internal.IntegratorServiceImpl
 *
 * N.B. 1
 * the original implementations sneaks in some non-explicit integrators; in particular
 * one might want to prevent JaccIntegrator to ever reach the state being mirrored.
 *
 * N.B. 2
 * when generating the state of Integrators, it does search for extensions over loadJavaServices.
 * This implies the state needs to be recorded when all extension points are discoverable.
 */
final class MirroringIntegratorService implements IntegratorService {

	private final LinkedHashSet<Integrator> integrators = new LinkedHashSet<Integrator>();

	void addIntegrator(Integrator integrator) {
		integrators.add( integrator );
	}

	@Override
	public Iterable<Integrator> getIntegrators() {
		return integrators;
	}

}
